{"version":3,"sources":["component/Form.js","component/Weather.js","utlities/Constants.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","onSubmit","getWeather","type","name","placeholder","Weather","className","data","temprature","city","country","humidity","description","error","API_KEY","API_LINK","App","state","event","a","preventDefault","target","elements","value","setState","fetch","api","json","status","main","temp","sys","weather","console","log","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAaeA,EAXH,SAACC,GAET,OAEI,cADA,CACA,QAAMC,SAAUD,EAAME,WAAtB,UACI,uBAAOC,KAAK,OAAOC,KAAK,OAAOC,YAAY,aAC3C,uBAAOF,KAAK,OAAOC,KAAK,UAASC,YAAY,gBAC7C,qDCiBIC,EAxBA,SAACN,GACV,OACI,sBAAKO,UAAU,OAAf,UAEQP,EAAMQ,KAAKC,YAAc,oBAAGF,UAAU,WAAb,0BAAqC,sBAAMA,UAAU,YAAhB,SAA6BP,EAAMQ,KAAKC,gBAGrGT,EAAMQ,KAAKE,MAAQ,oBAAGH,UAAU,WAAb,oBAA+B,sBAAMA,UAAU,YAAhB,SAA6BP,EAAMQ,KAAKE,UAG3FV,EAAMQ,KAAKG,SAAW,oBAAGJ,UAAU,WAAb,uBAAkC,sBAAMA,UAAU,YAAhB,SAA6BP,EAAMQ,KAAKG,aAGhGX,EAAMQ,KAAKI,UAAY,oBAAGL,UAAU,WAAb,wBAAmC,sBAAMA,UAAU,YAAhB,SAA6BP,EAAMQ,KAAKI,cAGlGZ,EAAMQ,KAAKK,aAAe,oBAAGN,UAAU,WAAb,0BAAqC,uBAAMA,UAAU,YAAhB,cAA8BP,EAAMQ,KAAKK,kBAGxGb,EAAMQ,KAAKM,OAAS,oBAAGP,UAAU,YAAb,qBAAiC,sBAAMA,UAAU,kBAAhB,SAAmCP,EAAMQ,KAAKM,eCrBhHC,EAAQ,mCACRC,EAAS,2CC4EAC,E,4MAtEdC,MAAM,CACJT,WAAW,GACXC,KAAK,GACLC,QAAQ,GACRC,SAAS,GACTC,YAAY,GACZC,MAAM,I,EAIPZ,W,uCAAY,WAAMiB,GAAN,qBAAAC,EAAA,yDACVD,EAAME,iBACAX,EAAKS,EAAMG,OAAOC,SAASb,KAAKc,MAChCb,EAAQQ,EAAMG,OAAOC,SAASZ,QAAQa,MACjC,KAAPd,GAAqB,KAAVC,EAJL,uBAMR,EAAKc,SAAS,CACZhB,WAAW,GACXC,KAAK,GACLC,QAAQ,GACRC,SAAS,GACTC,YAAY,GACZC,MAAM,0BAZA,0CAiBMY,MAAM,GAAD,OAAKV,EAAL,qBAA0BN,EAA1B,YAAkCC,EAAlC,kBAAmDI,IAjB9D,cAiBJY,EAjBI,iBAkBOA,EAAIC,OAlBX,QAkBJpB,EAlBI,OAmBM,MAAbmB,EAAIE,OACL,EAAKJ,SAAS,CACZhB,WAAW,GACXC,KAAK,GACLC,QAAQ,GACRC,SAAS,GACTC,YAAY,GACZC,MAAM,4BAIR,EAAKW,SAAS,CACZhB,WAAWD,EAAKsB,KAAKC,KACrBrB,KAAKF,EAAKJ,KACVO,QAAQH,EAAKwB,IAAIrB,QACjBC,SAASJ,EAAKsB,KAAKlB,SACnBC,YAAYL,EAAKyB,QAAQ,GAAGpB,YAC5BC,MAAM,KAGVoB,QAAQC,IAAI,EAAKjB,OAvCP,4C,kGA4CZ,WAEA,OACE,qBAAKX,UAAU,SAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,cAAC,EAAD,CAAML,WAAYkC,KAAKlC,aACvB,cAAC,EAAD,CAASM,KAAM4B,KAAKlB,QACpB,wBAAQX,UAAU,cAAlB,uD,GA9DU8B,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.15918a01.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form =(props)=>{\r\n\r\n    return (\r\n        // component content\r\n        <form onSubmit={props.getWeather}>\r\n            <input type='text' name='city' placeholder='City ...'/>\r\n            <input type='text' name='country'placeholder='Country ...'/>\r\n            <button>Get Weather</button>\r\n        </form>\r\n    );\r\n}\r\nexport default Form;"," import React  from 'react';\r\n\r\n const Weather =(props)=> {\r\n       return (\r\n           <div className='info'>\r\n               {\r\n                   props.data.temprature && <p className=\"info-key\">Temprature : <span className='info-data'>{props.data.temprature}</span></p>\r\n               }\r\n               {\r\n                    props.data.city && <p className=\"info-key\">City : <span className='info-data'>{props.data.city}</span></p>\r\n               }\r\n               {\r\n                   props.data.country && <p className=\"info-key\">Country : <span className='info-data'>{props.data.country}</span></p>\r\n               }\r\n               {\r\n                   props.data.humidity && <p className=\"info-key\">Humidity : <span className='info-data'>{props.data.humidity}</span></p>\r\n               }\r\n               {\r\n                   props.data.description && <p className=\"info-key\">Description :<span className='info-data'> {props.data.description}</span></p>\r\n               }\r\n               {\r\n                   props.data.error && <p className=\"info-key \">Error : <span className='info-data error'>{props.data.error}</span></p>\r\n               }\r\n           </div>\r\n       ); \r\n }\r\n export default Weather;\r\n","const API_KEY='88d769bb8688c373a67694c6a1b2429f';\r\nconst API_LINK='https://api.openweathermap.org/data/2.5/';\r\n\r\nexport  {API_KEY};\r\nexport {API_LINK};","import React ,{Component} from 'react';\nimport './App.css';\nimport Form from './component/Form';\nimport Weather from './component/Weather';\nimport { API_KEY } from './utlities/Constants';\nimport { API_LINK } from './utlities/Constants';\nclass App extends Component {\n state={\n   temprature:'',\n   city:'',\n   country:'',\n   humidity:'',\n   description:'',\n   error:''\n }\n \n  // async make http request work in background\n  getWeather= async(event)=>{\n    event.preventDefault();\n    const city=event.target.elements.city.value;\n    const country=event.target.elements.country.value;\n    if((city===''||country===''))\n    {\n      this.setState({\n        temprature:'',\n        city:'',\n        country:'',\n        humidity:'',\n        description:'',\n        error:'Please Enter The Data'\n      })\n      return\n    }\n    \n    const api=await fetch( `${API_LINK}weather?q=${city},${country}&appid=${API_KEY}`)// Making http Request\n    const data=await api.json();\n    if(api.status===404){\n      this.setState({\n        temprature:'',\n        city:'',\n        country:'',\n        humidity:'',\n        description:'',\n        error:'Please Enter Valid Data'\n      })\n    }\n    else {\n      this.setState({\n        temprature:data.main.temp,\n        city:data.name,\n        country:data.sys.country,\n        humidity:data.main.humidity,\n        description:data.weather[0].description,\n        error:''\n      })\n    }\n    console.log(this.state)\n\n\n  }\n\n  render ()\n {\n  return (\n    <div className=\"wraper\">\n      <div className=\"weather-container\">\n        <Form getWeather={this.getWeather} />\n        <Weather data={this.state}/>\n        <footer className='text-center'>\n          Copyright &copy; 2021 | Ahmed Alaa\n        </footer>\n      </div>\n    </div>\n  );\n }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}